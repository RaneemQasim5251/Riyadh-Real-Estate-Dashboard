from dataclasses import dataclass
from pathlib import Path
from PIL import Image


# define project configurations
@dataclass
class Config:
    project_path: Path = Path(__file__).parent.resolve()
    input_path: Path = project_path.joinpath("input")
    img_path: Path = project_path.joinpath("img")
    # convert banner image
    img = Image.open(str(img_path.joinpath("city_without_bg.png")))
    new_image = img.resize((600, 120))

    csv_file_name = "immo_data.csv"
    ignore_columns = [
        "picturecount",
        "pricetrend",
        "telekomUploadSpeed",
        "scoutId",
        "hasKitchen",
        "yearConstructedRange",
        "petsAllowed",
        "telekomTvOffer",
        "telekomHybridUploadSpeed",
        "geo_bln",
        "geo_plz",
        "houseNumber",
        "street" "geo_krs",
        "noRoomsRange",
        "interiorQual",
        "baseRentRange",
        "livingSpaceRange",
        "lastRefurbish",
        "numberOfFloors",
        "street",
        "streetPlain",
        "geo_krs",
        "regio2",
        "newlyConst"
    ]

    column_order = (
        "region",
        "typeOfFlat",
        "yearConstructed",
        "description",
        "baseRent",
        "totalRent",
        "livingSpace",
        "noRooms",
        "floor",
        "condition",
        "serviceCharge",
        "heatingType",
        "firingTypes"
        "noParkSpaces",
        "lift",
        "balcony",
        "garden",
        "cellar",
        "energyEfficiencyClass",
        "heatingCosts",
        "electricityBasePrice",
        "electricityKwhPrice"
    )

    categorical_column_names = [
        'typeOfFlat',
        'heatingType',
        'energyEfficiencyClass',
        'condition',
        'region'
    ]

    # Location Details
    location_details = {
        "region": "State (Bundesland) where the property is located."
    }

    # Property Features
    property_features = {
        "typeOfFlat": "Describes the type of flat (e.g., apartment, loft).",
        "livingSpace": "Total living space of the property in square meters.",
        "noRooms": "Number of rooms in the property.",
        "floor": "Specifies the floor on which the property is located.",
        "condition": "Current condition of the property (e.g., well-kept, in need of renovation).",
        "heatingType": "Describes the heating system installed in the property.",
        "firingTypes": "Main energy sources for the property.",
    }

    # Amenities
    amenities = {
        "balcony": "Indicates the presence of a balcony (Boolean).",
        "cellar": "Indicates if the property includes a cellar (Boolean).",
        "lift": "Indicates the presence of a lift/elevator in the building (Boolean).",
        "garden": "Indicates if there is garden access with the property (Boolean).",
    }

    # Financial Details
    financial_details = {
        "baseRent": "Base rent for the property without auxiliary costs, in €.",
        "totalRent": "Total rental cost, potentially including base rent, service charge, and heating costs, in €.",
        "serviceCharge": "Auxiliary costs, such as electricity or internet, expressed in €.",
        "heatingCosts": "Monthly heating costs in €, not always provided.",
        "energyEfficiencyClass": "Energy efficiency class of the property, based on thermal characteristics.",
        "electricityBasePrice": "Base monthly price for electricity in €, deprecated in some listings.",
        "electricityKwhPrice": "Price per kWh for electricity, providing insight into potential additional costs.",
    }

    # Construction and Efficiency
    construction_and_efficiency = {
        "yearConstructed": "The year in which the property was constructed.",
        "newlyConst": "Indicates whether the property is newly constructed (Boolean).",
        "thermalChar": "Thermal characteristic of the property, indicating energy efficiency.",
        "noParkSpaces": "Number of available parking spaces for the property.",
    }

    # Additional Descriptions
    additional_descriptions = {
        "description": "Free text description of the property provided by the listing.",
        "facilities": "Detailed listing of the property's facilities and amenities.",
    }

    # Example column descriptions
    column_descriptions = {
        "regio1": "State (Bundesland) where the property is located, indicating regional location.",
        "serviceCharge": "Auxiliary costs, such as electricity or internet, expressed in €.",
        "heatingType": "Describes the heating system installed in the property.",
        "newlyConst": "Indicates whether the property is newly constructed (Boolean).",
        "balcony": "Indicates the presence of a balcony (Boolean).",
        "totalRent": "Total rental cost, potentially including base rent, service charge, and heating costs, in €.",
        "yearConstructed": "The year in which the property was constructed.",
        "noParkSpaces": "Number of available parking spaces for the property.",
        "firingTypes": "Main energy sources for the property, could be multiple.",
        "cellar": "Indicates if the property includes a cellar (Boolean).",
        "baseRent": "Base rent for the property without auxiliary costs, in €.",
        "livingSpace": "Total living space of the property in square meters.",
        "condition": "Current condition of the property (e.g., well-kept, in need of renovation).",
        "street": "Name of the street on which the property is located.",
        "streetPlain": "Plain text representation of the street name.",
        "lift": "Indicates the presence of a lift/elevator in the building (Boolean).",
        "typeOfFlat": "Describes the type of flat (e.g., apartment, loft).",
        "geo_plz": "Postal code area for the property, indicating a more precise location.",
        "noRooms": "Number of rooms in the property.",
        "thermalChar": "Thermal characteristic of the property, indicating energy efficiency.",
        "floor": "Specifies the floor on which the property is located.",
        "numberOfFloors": "Total number of floors in the building.",
        "garden": "Indicates if there is garden access with the property (Boolean).",
        "regio2": "District or Kreis, providing a more specific location within the state.",
        "regio3": "City or town, offering the most specific location detail.",
        "description": "Free text description of the property provided by the listing.",
        "facilities": "Detailed listing of the property's facilities and amenities.",
        "heatingCosts": "Monthly heating costs in €, not always provided.",
        "energyEfficiencyClass": "Energy efficiency class of the property, based on thermal characteristics.",
        "electricityBasePrice": "Base monthly price for electricity in €, deprecated in some listings.",
        "electricityKwhPrice": "Price per kWh for electricity, providing insight into potential additional costs.",
    }

    # Mapping of states to their average household income per capita according to
    income_mapping = {
        "Bayern": 25309,
        "Hamburg": 25029,
        "Baden Württemberg": 24892,
        "Hessen": 23943,
        "Rheinland Pfalz": 23197,
        "Schleswig Holstein": 22833,
        "Nordrhein Westfalen": 22294,
        "Niedersachsen": 21988,
        "Bremen": 21481,
        "Berlin": 20972,
        "Brandenburg": 20475,
        "Sachsen": 20335,
        "Saarland": 20277,
        "Thüringen": 19793,
        "Sachsen Anhalt": 19528,
        "Mecklenburg Vorpommern": 19470,
    }

    region_coordinates = {
        "Baden Württemberg": {"lat": 48.59089459979375, "lon": 9.0399498},
        "Bayern": {"lat": 48.94675619970553, "lon": 11.4038717},
        "Berlin": {"lat": 52.501521699088066, "lon": 13.402549799999997},
        "Brandenburg": {"lat": 52.845549199084644, "lon": 13.246129599999998},
        "Bremen": {"lat": 53.144868999093646, "lon": 8.6932343},
        "Hamburg": {"lat": 53.54376409912386, "lon": 10.0099133},
        "Hessen": {"lat": 50.60806509932237, "lon": 9.028464699999999},
        "Niedersachsen": {"lat": 52.83985309908459, "lon": 9.075962},
        "Mecklenburg Vorpommern": {"lat": 53.77350639915104, "lon": 12.575547099999998},
        "Nordrhein Westfalen": {"lat": 51.47892049917536, "lon": 7.554375099999999},
        "Rheinland Pfalz": {"lat": 49.95315989946299, "lon": 7.310646},
        "Saarland": {"lat": 49.384187199597825, "lon": 6.953736899999999},
        "Sachsen": {"lat": 50.90147209926684, "lon": 13.0377839},
        "Sachsen Anhalt": {"lat": 52.0089064991167, "lon": 11.700334399999997},
        "Schleswig Holstein": {"lat": 54.18539979921813, "lon": 9.822008899999998},
        "Thüringen": {"lat": 50.90147209926684, "lon": 11.0377839},
    }

    additional_stopwords = [
        "wohnung", "zimmer", "m²",
        "befindet", "verfügung", "küche",
        "bad", "og", "außerdem", "auto",
        "platz", "schlafzimmer", "direkt",
        "garten", "vorhanden", "wohnen",
        "blick", "gehört", "gehören",
        "verfügt", "hau", "gibt", "räume",
        "liegt", "liegen", "gebäude",
        "zugang", "objekt", "wohnzimmer",
        "ca", "bezogen", "erreichen",
        "terrasse", "handelt", "handeln",
        "wohnungen", "balkon", "sowie",
        "ebenfall", "badezimmer", "haus",
        "bietet", "große", "badewanne",
        "dusche", "schöne", "stehen",
        "mieter", "besteht", "wohnfläche", "lässt",
        "e mail", "steht", "wurde", "befinden",
        "qm", "wc", "ausgestattet", "finden",
        "großen", "befinden", "ebenfalls",
        "angaben", "zwei", "geräumige",
        "wanne", "hause", "raum",
        "wohnanlage", "Flur", "Keller",
        "Fenster", "Wohneinheiten", "erbaut",
        "angebotene", "innerhalb", "Möglichkeit"
        "je", "insgesamt", "jeweil", "jeweils",
        "kellerraum", "wohn", "jahr", "minuten",
        "wohnbereich", "apartment", "hauses",
        "gäste", "abstellraum", "zusätzlich",
        "neue", "neu", "gesamte", "offene",
        "zudem", "aufgrund", "gelangt",
        "lage", "erhalten", "dg", "kleinen",
        "kleine", "kleinem", "vermietung",
        "bzw", "tür", "ort", "wände", "esszimmer",
        "immobilie", "immobilien", "sowohl", "als auch",
        "auch", "weitere", "weiteren", "weiterem", "neben",
        "etage", "etagen", "gerne", "stellplatz", "wohnraum",
        "gelangen", "wohnküche", "offener", "kleiner",
        "obergeschoss", "erdgeschoss", "dachgeschoss",
        "kinderzimmer", "essbereich", "möglich"
        "bereit", "eignet", "pkw", "großer", "lassen",
        "neuen", "waschbecken", "gut", "grundstück",
        "ansprechenden", "zählen", "sorgt", "zimmerwohnung",
        "großes", "garage", "kellerabteil", "angemietet",
        "hierbei", "eigene", "sorgen", "weiterhin",
        "gelegen", "zeichnet", "offenen", "vermieter",
        "grundriss", "ausstattung", "eingangsbereich",
        "senden", "eg", "wohnräume", "erwartet", "balkone",
        "tolle", "kellerabteil", "ebenso", "betreten",
        "lädt", "schönen", "abseits", "+", "schönes",
        "ab", "bitte", "mitten", "zimmerwohnung", "achtung",
        "wichtig", "wer", "ziehen", "nutzen", "objektnummer",
        "beim", "we", "vermiete", "raumwohnung", "hier", "hallo",
        "vermietet", "drei", "schön", "•", "angeboten", "dachgeschosswohnung",
        "…", "wichtiger", "treten", "hinweis", "daten", "ansprechende",
        "objektadresse", "wohnhaus", "suchen", "erdgeschosswohnung",
        "allgemein", "…hier", "scroll", "zimmer\nkombiniertes",
        "entlang", "anfragen", "mieten", "kontakt", "anmeldung",
        "bewerbung", "direktkontakt", "schöner", "gant", "kontaktieren",
        "kontaktaufnahme", "zustand\nwohntipp", "umgeben", "biete",
        "„", "wichtige", "appartement", "guten", "bereits", "the",
        "angebot", "steifen", "seit", "gesucht", "aufgepasst",
        "wohngebiet", "wohnfläche\t\nca", "objektbeschreibung\ndie",
        "aufteilungweitere", "wohngebäude", "mehr", "httpwwwmondialcampusdededresdenhome\n\ndas",
        "objektbeschreibung\ndas", "derzeit", "beschreibung", "wwwadamimmobiliede\n\ndiese",
        "wenig", "wenige", "zurzeit", "zimmerappartement", "vier",
        "wohnund", "bilder", "bild", "zehn", "link", "neuer",
        "httpwwwmondiallivingdedebonn\n\ndas", "objektbeschreibung\n\ndie",
        "dgwohnung", "zustand\neine", "•••feste", "erdgeschoßwohnung", "vorab",
        "geboten", "fünf", "weitläufige", "weitläufig", "sehen", "hello",
        "viele", "viel", "vieles", "vieler", "“", "heute", "objektbeschreibung",
        "größere", "nutzfläche", "bisher", "wählen", "lage im", "this", "wbs",
        "besichtigung bitte", "willkommen", "herzlich", "vereinbaren", "vormerkung",
        "zustand"

    ]
    replace_dict = {
        "großzügige": "großzügig",
        "großzügigen": "großzügig",
        "großzügiger": "großzügig",
        "großzügiges": "großzügig",
        "moderne": "modern",
        "moderner": "modern",
        "modernes": "modern",
        "modernen": "modern",
        "mehrfamilienhause": "mehrfamilienhaus",
        "mehrfamilienhau": "mehrfamilienhaus",
        "seperate": "seperat",
        "seperater": "seperat",
        "hochwertige": "hochwertig",
        "hochwertigen": "hochwertig",
        "hochwertiger": "hochwertig",
        "hochwertiges": "hochwertig",
        "freundliche": "freundlich",
        "freundliches": "freundlich",
        "freundlicher": "freundlich",
        "gehobene": "gehoben",
        "gepflegte": "gepflegt",
        "gepflegtes": "gepflegt",
        "gepflegter": "gepflegt",
        "gepflegten": "gepflegt",
        "gemütliche": "gemütlich",
        "helle": "hell",
        "helles": "hell",
        "ruhiger": "ruhig",
        "ruhiges": "ruhig",
        "ruhige": "ruhig",
        "saniertes": "saniert",
        "sanierte": "saniert",
        "sanierter": "saniert",
        "günstige": "günstig",
        "traumhafte": "traumhaft",
        "traumhafter": "traumhaft",
        "traumhaftes": "traumhaft",
        "neuwertige": "neuwertig",
        "renovierte": "renoviert",
        "renovierter": "renoviert",
        "renoviertes": "renoviert",
        "sonnige": "sonnig",
        "wunderschöne": "wunderschön",
        "wunderschönes": "wunderschön",
        "attraktive": "attraktiv",
        "attraktives": "attraktiv",
        "attraktiver": "attraktiv",
        "schicke": "schick",
        "schickes": "schick",
        "hübsche": "hübsch",
        "freistehendes": "freistehend",
        "lichtdurchflutete": "lichtdurchflutet",
        "a": "",
        "modernisierte": "modernisiert",
        "modernisiertes": "modernisiert",
        "modernisierter": "modernisiert",
        "möbliertes": "möbliert",
        "möblierte": "möbliert",
        "möbilierte": "möbliert",
        "urbanes": "urban",
        "urbane": "urban",
        "gemütliches": "gemütlich",
        "charmante": "charmant",
        "komfortable": "komfortabel",
        "komfortabler": "komfortabel",
        "barrierefreie": "barrierefrei",
        "nette": "nett",
        "nettes": "nett",
        "netter": "nett",
        "luxuriöse": "luxuriös",
        "familienfreundliches": "familienfreundlich",
        "familienfreundliche": "familienfreundlich",
        "ideale": "ideal",
        "ideales": "ideal",
        "elegante": "elegant",
        "besichtigungstermine": "besichtigungstermin",
        "ansprechende": "ansprechend",
        "ansprechendes": "ansprechend",
        "besichtigungen": "besichtigung",
        "außergewöhnliche": "außergewöhnlich",
        "außergewöhnliches": "außergewöhnlich",
        "außergewöhnlicher": "außergewöhnlich",
        "herrliche": "herrlich",
        "neuwertiges": "neuwertig",
        "solides": "solide",
        "denkmalgeschütztes": "denkmalgeschützt",
        "denkmalgeschützte": "denkmalgeschützt",
        "einmalige": "einmalig",
        "einmaliges": "einmalig",
        "einmaliger": "einmalig",
        "tolles": "toll",
        "traditionelles": "traditionell",
        "traditionelle": "traditionell",
        "traditioneller": "traditionell",
        "zentraler": "zentral",
        "zentrales": "zentral",
        "zentrale": "zentral",
        "vollmodernisiertes": "vollmodernisiert",
        "vollmodernisierter": "vollmodernisiert",
        "vollmodernisierte": "vollmodernisiert",
        "aufgelockerte": "aufgelockert",
        "individuelle": "individuell",
        "individueller": "individuell",
        "individuelles": "individuell",
        "singles": "single",
        "single": "single",
        "perfekte": "perfekt",
        "perfektes": "perfekt",
        "perfekter": "perfekt",
        "reizvolle": "reizvoll",
        "vollsanierter": "vollsaniert",
        "vollsaniertes": "vollsaniert",
        "vollsanierte": "vollsaniert",
        "massive": "massiv",
        "seltene": "selten",
        "seltenes": "selten",
        "seltener": "selten",
        "stilvolle": "stilvoll",
        "stilvoller": "stilvoll",
        "stilvolles": "stilvoll",
        "teilsanierte": "teilsaniert",
        "teilsaniertes": "teilsaniert",
        "teilsanierter": "teilsaniert",
        "altersgerechte": "altersgerecht",
        "angenehme": "angenehm",
        "angenehmes": "angenehm",
        "angenehmer": "angenehm",
        "kernsanierte": "kernsaniert",
        "seniorengerechte": "seniorengerecht",
        "seniorengerechtes": "seniorengerecht",
        "seniorengerechter": "seniorengerecht",
        "idyllische": "idyllisch",
        "persönliche": "persönlich",
        "persönliches": "persönlich",
        "persönlicher": "persönlich",
        "wärmegedämmte": "wärmegedämmt",
        "wärmegedämmter": "wärmegedämmt",
        "wärmegedämmtes": "wärmegedämmt",
        "klassische": "klassisch",
        "klassischer": "klassisch",
        "klassisches": "klassisch",
        "repräsentative": "repräsentativ",
        "repräsentatives": "repräsentativ",
        "repräsentativer": "repräsentativ",
        "erstklassige": "erstklassig",
        "erstklassiges": "erstklassig",
        "erstklassiger": "erstklassig",
        "vollmöblierte": "vollmöbliert",
        "vollmöbliertes": "vollmöbliert",
        "vollmöblierter": "vollmöbliert",
        "interessante": "interessant",
        "interessanter": "interessant",
        "interessantes": "interessant"
    }
